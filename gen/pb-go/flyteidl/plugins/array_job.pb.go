// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/plugins/array_job.proto

package plugins

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Describes a job that can process independent pieces of data concurrently. Multiple copies of the runnable component
// will be executed concurrently.
type ArrayJob struct {
	// Defines the minimum number of instances to bring up concurrently at any given point. Note that this is an
	// optimistic restriction and that, due to network partitioning or other failures, the actual number of currently
	// running instances might be more. This has to be a positive number if assigned. Default value is size.
	Parallelism int64 `protobuf:"varint,1,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	// Defines the number of instances to launch at most. This number should match the size of the input if the job
	// requires processing of all input data. This has to be a positive number.
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// Types that are valid to be assigned to SuccessCriteria:
	//	*ArrayJob_MinSuccesses
	//	*ArrayJob_MinSuccessRatio
	SuccessCriteria      isArrayJob_SuccessCriteria `protobuf_oneof:"success_criteria"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ArrayJob) Reset()         { *m = ArrayJob{} }
func (m *ArrayJob) String() string { return proto.CompactTextString(m) }
func (*ArrayJob) ProtoMessage()    {}
func (*ArrayJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_794211c91ec6cd2b, []int{0}
}

func (m *ArrayJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArrayJob.Unmarshal(m, b)
}
func (m *ArrayJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArrayJob.Marshal(b, m, deterministic)
}
func (m *ArrayJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArrayJob.Merge(m, src)
}
func (m *ArrayJob) XXX_Size() int {
	return xxx_messageInfo_ArrayJob.Size(m)
}
func (m *ArrayJob) XXX_DiscardUnknown() {
	xxx_messageInfo_ArrayJob.DiscardUnknown(m)
}

var xxx_messageInfo_ArrayJob proto.InternalMessageInfo

func (m *ArrayJob) GetParallelism() int64 {
	if m != nil {
		return m.Parallelism
	}
	return 0
}

func (m *ArrayJob) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type isArrayJob_SuccessCriteria interface {
	isArrayJob_SuccessCriteria()
}

type ArrayJob_MinSuccesses struct {
	MinSuccesses int64 `protobuf:"varint,3,opt,name=min_successes,json=minSuccesses,proto3,oneof"`
}

type ArrayJob_MinSuccessRatio struct {
	MinSuccessRatio float32 `protobuf:"fixed32,4,opt,name=min_success_ratio,json=minSuccessRatio,proto3,oneof"`
}

func (*ArrayJob_MinSuccesses) isArrayJob_SuccessCriteria() {}

func (*ArrayJob_MinSuccessRatio) isArrayJob_SuccessCriteria() {}

func (m *ArrayJob) GetSuccessCriteria() isArrayJob_SuccessCriteria {
	if m != nil {
		return m.SuccessCriteria
	}
	return nil
}

func (m *ArrayJob) GetMinSuccesses() int64 {
	if x, ok := m.GetSuccessCriteria().(*ArrayJob_MinSuccesses); ok {
		return x.MinSuccesses
	}
	return 0
}

func (m *ArrayJob) GetMinSuccessRatio() float32 {
	if x, ok := m.GetSuccessCriteria().(*ArrayJob_MinSuccessRatio); ok {
		return x.MinSuccessRatio
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ArrayJob) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ArrayJob_MinSuccesses)(nil),
		(*ArrayJob_MinSuccessRatio)(nil),
	}
}

func init() {
	proto.RegisterType((*ArrayJob)(nil), "flyteidl.plugins.ArrayJob")
}

func init() { proto.RegisterFile("flyteidl/plugins/array_job.proto", fileDescriptor_794211c91ec6cd2b) }

var fileDescriptor_794211c91ec6cd2b = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xd0, 0xbd, 0x4a, 0x04, 0x31,
	0x14, 0x05, 0xe0, 0xcd, 0xee, 0x22, 0x12, 0x15, 0xd7, 0x54, 0x29, 0x83, 0x20, 0x6c, 0xa1, 0x93,
	0x62, 0xf1, 0x01, 0xdc, 0x6a, 0xb1, 0x8c, 0x9d, 0xcd, 0x90, 0xc4, 0x4c, 0xbc, 0x92, 0x3f, 0x92,
	0x4c, 0x31, 0xbe, 0x91, 0x6f, 0x29, 0x33, 0x38, 0x3a, 0xd8, 0x5d, 0xce, 0xf9, 0x9a, 0x73, 0x31,
	0xeb, 0xdc, 0x50, 0x0d, 0xbc, 0x39, 0x9e, 0x5c, 0x6f, 0x21, 0x14, 0x2e, 0x73, 0x96, 0x43, 0xfb,
	0x11, 0x55, 0x93, 0x72, 0xac, 0x91, 0xec, 0x66, 0xd1, 0xfc, 0x88, 0xdb, 0x2f, 0x84, 0xcf, 0x9f,
	0x46, 0xf5, 0x1c, 0x15, 0x61, 0xf8, 0x22, 0xc9, 0x2c, 0x9d, 0x33, 0x0e, 0x8a, 0xa7, 0x88, 0xa1,
	0xfd, 0x46, 0x2c, 0x23, 0x42, 0xf0, 0xb6, 0xc0, 0xa7, 0xa1, 0xeb, 0xa9, 0x9a, 0x6e, 0x72, 0x87,
	0xaf, 0x3c, 0x84, 0xb6, 0xf4, 0x5a, 0x9b, 0x52, 0x4c, 0xa1, 0x9b, 0xb1, 0x3c, 0xad, 0xc4, 0xa5,
	0x87, 0xf0, 0x32, 0xa7, 0xe4, 0x1e, 0xdf, 0x2c, 0x58, 0x9b, 0x65, 0x85, 0x48, 0xb7, 0x0c, 0xed,
	0xd7, 0xa7, 0x95, 0xb8, 0xfe, 0xa3, 0x62, 0x2c, 0x8e, 0x04, 0xef, 0x66, 0xa9, 0x33, 0x54, 0x93,
	0x41, 0x1e, 0x1f, 0x5f, 0x0f, 0x16, 0xea, 0x7b, 0xaf, 0x1a, 0x1d, 0x3d, 0x77, 0x43, 0x57, 0xf9,
	0xef, 0x62, 0x6b, 0x02, 0x4f, 0xea, 0xc1, 0x46, 0xfe, 0xff, 0x09, 0xea, 0x6c, 0xda, 0x7e, 0xf8,
	0x0e, 0x00, 0x00, 0xff, 0xff, 0x63, 0x45, 0x75, 0xde, 0x1f, 0x01, 0x00, 0x00,
}
